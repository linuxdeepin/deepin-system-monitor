######################################################################
# Automatically generated by qmake (3.0) ?? 2? 4 17:49:37 2017
######################################################################

TEMPLATE = app
TARGET = deepin-system-monitor
INCLUDEPATH += $$PWD/nethogs/src/
				
CONFIG += link_pkgconfig
CONFIG += c++11 
PKGCONFIG += xcb xcb-util dtkwidget dtkwm
RESOURCES = deepin-system-monitor.qrc

!system(cd $$PWD/nethogs && make libnethogs){
	error("Build nethogs static library failed.")
}

CONFIG(debug, debug|release) {
  # Enable memory address sanitizer in debug mode.
  QMAKE_CXXFLAGS += -fsanitize=address
  LIBS += -lasan
}

# Input
HEADERS += src/utils.h \
           src/toolbar.h \
           src/cpu_monitor.h \
           src/memory_monitor.h \
           src/network_monitor.h \
           src/disk_monitor.h \
           src/compact_cpu_monitor.h \
           src/compact_memory_monitor.h \
           src/compact_network_monitor.h \
           src/compact_disk_monitor.h \
           src/network_traffic_filter.h \
           src/status_monitor.h \
           src/process_manager.h \
           src/process_item.h \
           src/process_view.h \
           src/hashqstring.h \
           src/find_window_title.h \
           src/smooth_curve_generator.h \
	   src/interactive_kill.h \
	   src/start_tooltip.h \
	   src/process_tree.h \
	   src/process_switch_tab.h \
	   src/attributes_dialog.h \
	   src/constant.h \
	   src/settings.h \
	   src/chinese2pinyin.h \
	   src/main_window.h
SOURCES += src/main.cpp \
	   src/utils.cpp \
	   src/toolbar.cpp \
	   src/cpu_monitor.cpp \
	   src/memory_monitor.cpp \
	   src/network_monitor.cpp \
	   src/disk_monitor.cpp \
	   src/compact_cpu_monitor.cpp \
	   src/compact_memory_monitor.cpp \
	   src/compact_network_monitor.cpp \
	   src/compact_disk_monitor.cpp \
	   src/network_traffic_filter.cpp \
	   src/status_monitor.cpp \
           src/process_manager.cpp \
	   src/process_item.cpp \
           src/process_view.cpp \
	   src/find_window_title.cpp \
	   src/smooth_curve_generator.cpp \
	   src/interactive_kill.cpp \
	   src/start_tooltip.cpp \
	   src/process_tree.cpp \
	   src/process_switch_tab.cpp \
	   src/attributes_dialog.cpp \
	   src/chinese2pinyin.cpp \
	   src/main_window.cpp \
	   src/settings.cpp
		   
QT += core
QT += widgets
QT += gui
QT += network
QT += x11extras
QT += dbus

# QMAKE_CXXFLAGS += -g
LIBS += -L$$PWD/nethogs/src -lnethogs -lpcap
LIBS += -L"libprocps" -lprocps
LIBS += -lX11 -lXext -lXtst -ldtkwm

OBJECTS_DIR=out
MOC_DIR=out

isEmpty(PREFIX):PREFIX=/usr
isEmpty(BINDIR):BINDIR=$${PREFIX}/bin
isEmpty(ICONDIR):ICONDIR=$${PREFIX}/share/icons/hicolor/scalable/apps
isEmpty(APPDIR):APPDIR=$${PREFIX}/share/applications
isEmpty(DSRDIR):DSRDIR=$${PREFIX}/share/$${TARGET}
isEmpty(DOCDIR):DOCDIR=$${PREFIX}/share/dman/$${TARGET}
desktop.path = $$INSTROOT$$APPDIR
icon.path = $$INSTROOT$$ICONDIR
target.path = $$INSTROOT$$BINDIR
manual.path = $$INSTROOT$$DOCDIR

# Automating generation .qm files from .ts files
!system($$PWD/translations/translate_generation.sh): error("Failed to generate translation")

qm_files.path = $${PREFIX}/share/deepin-system-monitor/translations/
qm_files.files = translations/*.qm

desktop.files = deepin-system-monitor.desktop
icon.files = image/deepin-system-monitor.svg
manual.files = manual/*

INSTALLS += desktop icon target qm_files manual
