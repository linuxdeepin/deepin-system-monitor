######################################################################
# Automatically generated by qmake (3.0) ?? 2? 4 17:49:37 2017
######################################################################

TEMPLATE = app
TARGET = deepin-system-monitor
INCLUDEPATH += $$PWD/nethogs/src/

CONFIG += link_pkgconfig
CONFIG += c++11
PKGCONFIG += xcb dtkwidget dtkwm
RESOURCES = deepin-system-monitor.qrc

!system(cd $$PWD/nethogs && make libnethogs){
	error("Build nethogs static library failed.")
}

#CONFIG(debug, debug|release) {
#        # Enable memory address sanitizer in debug mode.
#        QMAKE_CXXFLAGS += -fsanitize=address
#        LIBS += -lasan
#}

CONFIG(release, debug|release) {
        DEFINES += QT_NO_DEBUG_OUTPUT
}

INCLUDEPATH += $$PWD/src/

# Input
HEADERS += src/utils.h \
        src/gui/toolbar.h \
        src/cpu_monitor.h \
        src/memory_monitor.h \
        src/network_monitor.h \
        src/disk_monitor.h \
        src/compact_cpu_monitor.h \
        src/compact_memory_monitor.h \
        src/compact_network_monitor.h \
        src/compact_disk_monitor.h \
        src/network_traffic_filter.h \
        src/find_window_title.h \
        src/smooth_curve_generator.h \
        src/interactive_kill.h \
        src/start_tooltip.h \
        src/constant.h \
        src/settings.h \
        src/dbus/systemd1_manager_interface.h \
        src/dbus/systemd1_service_interface.h \
        src/dbus/systemd1_unit_interface.h \
        src/dbus/dbus_properties_interface.h \
        src/dbus/dbus_common.h \
        src/model/system_service_table_model.h \
        src/model/system_service_sort_filter_proxy_model.h \
        src/gui/system_service_table_view.h \
        src/service/service_manager.h \
        src/service/system_service_entry_data.h \
        src/service/system_service_entry.h \
        src/gui/main_window.h \
        src/gui/system_service_page_widget.h \
        src/gui/process_page_widget.h \
        src/dbus/environment_file.h \
        src/dbus/unit_file_info.h \
        src/dbus/unit_info.h \
        src/common/error_context.h \
        src/gui/service_name_sub_input_dialog.h \
        src/gui/ui_common.h \
        src/gui/process_table_view.h \
        src/model/process_table_model.h \
        src/model/process_sort_filter_proxy_model.h \
        src/process/process_entry.h \
        src/common/han_latin.h \
        src/gui/monitor_expand_view.h \
        src/gui/monitor_compact_view.h \
        src/process/system_monitor.h \
        src/gui/kill_process_confirm_dialog.h \
        src/gui/process_attribute_dialog.h \
        src/process/priority_controller.h \
        src/gui/priority_slider.h \
        src/common/collator.h \
        src/gui/base_table_view.h \
        src/gui/base_item_delegate.h \
        src/gui/base_header_view.h \
        src/process/process_controller.h \
    src/process/process_stat.h \
    src/process/system_stat.h \
    src/process/stats_collector.h \
    src/process/desktop_entry_stat.h \
    src/service/service_manager_worker.h

SOURCES += src/main.cpp \
        src/utils.cpp \
        src/gui/toolbar.cpp \
        src/cpu_monitor.cpp \
        src/memory_monitor.cpp \
        src/network_monitor.cpp \
        src/disk_monitor.cpp \
        src/compact_cpu_monitor.cpp \
        src/compact_memory_monitor.cpp \
        src/compact_network_monitor.cpp \
        src/compact_disk_monitor.cpp \
        src/network_traffic_filter.cpp \
        src/find_window_title.cpp \
        src/smooth_curve_generator.cpp \
        src/interactive_kill.cpp \
        src/start_tooltip.cpp \
        src/settings.cpp \
        src/dbus/systemd1_manager_interface.cpp \
        src/dbus/systemd1_service_interface.cpp \
        src/dbus/systemd1_unit_interface.cpp \
        src/dbus/dbus_properties_interface.cpp \
        src/model/system_service_table_model.cpp \
        src/model/system_service_sort_filter_proxy_model.cpp \
        src/service/service_manager.cpp \
        src/service/system_service_entry_data.cpp \
        src/service/system_service_entry.cpp \
        src/gui/system_service_table_view.cpp \
        src/gui/main_window.cpp \
        src/gui/system_service_page_widget.cpp \
        src/gui/process_page_widget.cpp \
        src/dbus/environment_file.cpp \
        src/dbus/unit_file_info.cpp \
        src/dbus/unit_info.cpp \
        src/common/error_context.cpp \
        src/gui/service_name_sub_input_dialog.cpp \
        src/gui/process_table_view.cpp \
        src/model/process_table_model.cpp \
        src/model/process_sort_filter_proxy_model.cpp \
        src/process/process_entry.cpp \
        src/common/han_latin.cpp \
        src/gui/monitor_expand_view.cpp \
        src/gui/monitor_compact_view.cpp \
        src/process/system_monitor.cpp \
        src/gui/kill_process_confirm_dialog.cpp \
        src/gui/process_attribute_dialog.cpp \
        src/process/priority_controller.cpp \
        src/gui/priority_slider.cpp \
        src/gui/ui_common.cpp \
        src/common/collator.cpp \
        src/gui/base_table_view.cpp \
        src/gui/base_item_delegate.cpp \
        src/gui/base_header_view.cpp \
        src/process/process_controller.cpp \
    src/process/process_stat.cpp \
    src/process/system_stat.cpp \
    src/process/stats_collector.cpp \
    src/process/desktop_entry_stat.cpp \
    src/service/service_manager_worker.cpp

QT += core
QT += widgets
QT += gui
QT += x11extras
QT += dbus
QT += concurrent
QT += dtkwidget
QT += dtkgui

# QMAKE_CXXFLAGS += -g
LIBS += -L$$PWD/nethogs/src -lnethogs -lpcap
LIBS += -L"libprocps" -lprocps
LIBS += -lXext -ldtkwm -licui18n -licuuc

load(dtk_qmake)
host_sw_64: {
    QMAKE_CFLAGS += -mieee
    QMAKE_CXXFLAGS += -mieee
}

OBJECTS_DIR=out
MOC_DIR=out

isEmpty(BINDIR):BINDIR=$${PREFIX}/bin
isEmpty(ICONDIR):ICONDIR=$${PREFIX}/share/icons/hicolor/scalable/apps
isEmpty(APPDIR):APPDIR=$${PREFIX}/share/applications
isEmpty(DSRDIR):DSRDIR=$${PREFIX}/share/$${TARGET}
isEmpty(POLICYDIR):POLICYDIR=$${PREFIX}/share/polkit-1/actions
desktop.path = $$INSTROOT$$APPDIR
icon.path = $$INSTROOT$$ICONDIR
target.path = $$INSTROOT$$BINDIR
policy.path = $$INSTROOT$$POLICYDIR

# Automating generation .qm files from .ts files
CONFIG(release, debug|release) {
    # ts to qm
    TRANSLATIONS = $$files($$PWD/translations/*.ts)
    for(tsfile, TRANSLATIONS) {
        qmfile = $$replace(tsfile, .ts$, .qm)
        system(lrelease $$tsfile -qm $$qmfile) | error("Failed to lrelease")
    }
    dtk_translations.path = /usr/share/$$TARGET/translations
    dtk_translations.files = $$PWD/translations/*.qm
    INSTALLS += dtk_translations

    # convert desktop_{lang}.ts to .desktop
    !system(deepin-desktop-ts-convert init $${TARGET}.desktop translations/desktop): error("Failed desktop to ts")
    !system(deepin-desktop-ts-convert desktop2ts $${TARGET}.desktop translations/desktop): error("Failed desktop to ts")
    system(deepin-desktop-ts-convert ts2desktop $${TARGET}.desktop translations/desktop $${TARGET}.desktop.tmp) {
        system(mv $${TARGET}.desktop.tmp $${TARGET}.desktop)
    }

    # convert policy_{lang}.ts to .policy
    !system(deepin-policy-ts-convert init com.deepin.pkexec.$${TARGET}.policy translations/policy): error("Failed policy to ts")
    !system(deepin-policy-ts-convert policy2ts com.deepin.pkexec.$${TARGET}.policy translations/policy): error("Failed policy to ts")
    system(deepin-policy-ts-convert ts2policy com.deepin.pkexec.$${TARGET}.policy translations/policy com.deepin.pkexec.$${TARGET}.policy.tmp) {
        system(mv com.deepin.pkexec.$${TARGET}.policy.tmp com.deepin.pkexec.$${TARGET}.policy)
    }
}

desktop.files = $${TARGET}.desktop
icon.files = image/$${TARGET}.svg
policy.files = com.deepin.pkexec.$${TARGET}.policy

INSTALLS += desktop icon target policy
